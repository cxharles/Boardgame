name: deployment Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Build with Maven
      - name: Build with Maven
        run: mvn package --file pom.xml

      # Upload artifact
      - uses: actions/upload-artifact@v4
        with:
          name: Boardgame
          path: target/*.jar

      # Install Trivy
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      # Trivy FS Scan
      - name: Trivy FS Scan
        run: |
          trivy fs --format table -o trivy-fs-report.html .

      # Install jq
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # Set up QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t charlesjatto/boardgame:latest .

      # Trivy Image Scan
      - name: Trivy Image Scan
        run: |
          trivy image --format table -o trivy-image-report.html charlesjatto/boardgame:latest

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Push Docker Image
      - name: Push Docker Image
        run: |
          docker push charlesjatto/boardgame:latest

      - name: Kubectl Action
        uses: tale/kubectl-action@v1
        with:
           base64-kube-config: ${{ secrets.KUBE_CONFIG }}
      - run: |
          kubectl apply -f deployment-service.yaml
          kubectl get svc -n webapps
